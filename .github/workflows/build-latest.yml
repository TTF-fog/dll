name: Build Flarial and upload to newcdn

on:
  push:
    branches: [ "main", "scripting-v2" ]
  pull_request:
    branches: [ "main", "scripting-v2" ]
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  windows-build:
    runs-on: windows-latest
    outputs:
      type: ${{ steps.type.outputs.status }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: "Check commit type"
        id: type
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"build:"* ]]; then
              echo "Continuing to build as nightly"
              echo "status=0" >> "$GITHUB_ENV"
          elif [[ "${{ github.event.head_commit.message }}" == *"release:"* ]]; then
              echo "Continuing to build as release"
              echo "status=1" >> "$GITHUB_ENV"
          else
              echo "Not a build commit, exiting"
              gh run cancel ${{ github.run_id }}
              gh run watch ${{ github.run_id }}
              exit 0
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up MSVC Environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: |
          echo 'hi'
          # Uncomment and modify this line as needed
          # cmake -S . -B build -G "Ninja" -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_STANDARD=23 -DCMAKE_BUILD_TYPE=Release

    # Uncomment this part when building the DLL is required
    # - name: Build DLL
    #   run: |
    #     cmake --build build

    # Uncomment to upload build artifact when needed
    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v4.6.1
    #   with:
    #     name: Flarial_DLL
    #     path: D:\a\dll\dll\build\Flarial.dll

  upload-to-cdn:
    runs-on: ubuntu-latest
    needs: windows-build
    steps:
      - name: Output commit type
        run: echo "Build type: ${{ needs.windows-build.outputs.type }}"

      - name: Checkout newcdn repository
        uses: actions/checkout@v4
        with:
          repository: 'TTF-fog/newcdn'
          ref: 'main'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git Configs
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@example.com"

      - name: Download build artifact
        uses: actions/download-artifact@v4.1.9

      - name: Push changes
        if: ${{ needs.windows-build.outputs.type == '1' }}
        run: |
          gh release upload "test" "Flarial_DLL/Flarial.dll"
          gh release edit "test" --draft=false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
